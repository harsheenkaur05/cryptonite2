import string

LOWERCASE_OFFSET = ord("a")
ALPHABET = string.ascii_lowercase[:16]

flag = lkmjkemjmkiekeijiiigljlhilihliikiliginliljimiklligljiflhiniiiniiihlhilimlhijil "



def GetBinaryEqIn4Bits(i,k):
    
    position = ALPHABET.rfind(flag[i])
    sum_of_t1_t2_mod16 = position
    t2 = ord(k) - 97
    t1 = 0
    if t2 == sum_of_t1_t2_mod16:
        t1=0
    elif t2 < sum_of_t1_t2_mod16:
        t1 = sum_of_t1_t2_mod16 - t2
    elif t2 > sum_of_t1_t2_mod16:
        t1 = 16 + sum_of_t1_t2_mod16 - t2
    else:
        print("error")
        
    t1 = t1+97
    letter1 = chr(t1)

    position_enc = ALPHABET.rfind(letter1)
    return "{0:04b}".format(position_enc)


final_char = ""
for k in ALPHABET:
    for i in range(0, len(flag), 2):
        concat = str(GetBinaryEqIn4Bits(i,k))+str(GetBinaryEqIn4Bits(i+1,k))
        # print(concat)
        decEq = int(concat, 2)
        # print(decEq)
            
        
        final_char = final_char + chr(decEq)
    print("for key" , k, "password" ,final_char)
    final_char = ""

